<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


	<mvc:annotation-driven></mvc:annotation-driven>  <!-- specifying the requestMapping and steryo type annotation -->
	<context:component-scan base-package="controller"
		annotation-config="true"></context:component-scan> <!-- where to look for those annotated types.
		 i.e. those bean whose definition is not on the xml file-->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- this to specify if that if an interface for proxy is not defined, create one automatically  -->

	<bean id="resourceResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>



	<!-- data source configs -->

	<bean id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost/church"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>

	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"><!-- not the class is not hibernate properties
		is not mistaken can hold properties for any other item that needs to take properties -->
		<property name="properties">
			<props>
				<prop key='hibernate.show_sql'>true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource"></property>
		<property name="hibernateProperties" ref="hibernateProperties">
		</property>
		<property name="annotatedClasses">
			<list>
				<value>data.User</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	<!-- transactionManager is the name used the hibernate framework, if not set it will complain that fail to find the transactionManager -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:annotation-driven /> <!-- stating that we have used annotation for transaction management (common thing to forget)-->

	
	<!-- bean configuration   -->
	<bean id="dao" class="dao.Dao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="service" class="service.Service">
		<property name="dao" ref="dao"></property>
	</bean>

</beans>
